name: matterhorn
base: core20
adopt-info: matterhorn
summary: Matterhorn
description: |
  A feature-rich Unix terminal client for the Mattermost chat system
grade: stable
confinement: strict

apps:
  matterhorn:
    command: bin/matterhorn
    plugs:
      - home
      - desktop
      - network
      - password-manager-service
      - x11
    environment:
      EDITOR: $SNAP/usr/bin/nvim # Would be nice to be able to use the host $EDITOR

layout:
  /usr/libexec/neovim:
    bind: $SNAP/usr/libexec/neovim
  /usr/share/nvim:
    bind: $SNAP/usr/share/nvim

parts:
  matterhorn:
    source: https://github.com/matterhorn-chat/matterhorn.git
    source-branch: develop
    plugin: nil
    override-pull: |
      # FIXME: We need a way to make snapcraft not to use --recursive, but
      # We keep the source and branch stuff for future and to get git deps
      # snapcraftctl pull
      git clone https://github.com/matterhorn-chat/matterhorn.git -b develop ${SNAPCRAFT_PART_SRC}

      sed -i -e /url/s,git@github.com:,https://github.com/, ${SNAPCRAFT_PART_SRC}/.gitmodules
      git -C ${SNAPCRAFT_PART_SRC} submodule update --init
      for p in "${SNAPCRAFT_PROJECT_DIR}"/patches/*; do
        (cd "${SNAPCRAFT_PART_SRC}" && patch -p1 < "$p")
      done

      cabal -j${SNAPCRAFT_PARALLEL_BUILD_COUNT} new-update
    override-build: |
      set -eu
      export LANG=C.UTF-8
      export CABALARGS="-j${SNAPCRAFT_PARALLEL_BUILD_COUNT}"

      cd "${SNAPCRAFT_PART_BUILD}"
      ./scripts/local-mkrelease.sh

      TAR=$(ls matterhorn-*.tar.* -1)
      echo "Unpacking ${TAR}..."
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/app"
      tar jxvf "${TAR}" -C "${SNAPCRAFT_PART_INSTALL}/app" --strip-components=1
      install -m 755 ${SNAPCRAFT_PROJECT_DIR}/launcher -D ${SNAPCRAFT_PART_INSTALL}/bin/matterhorn -v
      rm -f "${TAR}"

      snapcraftctl set-version "$(git describe --tags)"
    build-packages:
      - cabal-install
      - ghc
      - zlib1g-dev
    stage-packages:
      - libatomic1

  integration-tools:
    plugin: nil
    stage-packages:
      - libsecret-tools
      - libnotify-bin
      - neovim
      - xclip

  cleanup:
    after:
      - integration-tools
      - matterhorn
    plugin: nil
    build-snaps: [core20]
    override-prime: |
      set -eux
      build_snaps=core20
      for snap in $build_snaps; do
        cd "/snap/$snap/current" && \
        find . -type f,l -exec rm -fv "$SNAPCRAFT_PRIME/{}" "$SNAPCRAFT_PRIME/usr/{}" \;
      done
      for CRUFT in bug lintian man; do
        rm -rf $SNAPCRAFT_PRIME/usr/share/$CRUFT
      done
      find $SNAPCRAFT_PRIME/usr/share/doc/ -type f -not -name 'copyright' -delete
      find $SNAPCRAFT_PRIME/usr/share -type d -empty -delete
      rm -rf $SNAPCRAFT_PRIME/usr/share/man
